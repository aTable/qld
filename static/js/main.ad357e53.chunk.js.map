{"version":3,"sources":["enums.ts","pages/NotFound.tsx","constants.ts","config.ts","utils.ts","api.ts","components/VisualizeOffences.tsx","pages/Home.tsx","pages/About.tsx","components/Navbar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LocationType","GeographicType","CrimeType","OffenceType","NotFound","id","className","Component","brisbaneCoords","config","serverUri","process","mapGeographicToLocationType","type","Suburb","SUBURB","POSTCODE","console","error","server","axios","create","baseURL","getBoundaries","locationType","locationName","mappedLocation","Error","mapLocationTypeToValidApiParam","local","localStorage","getItem","defaults","encodeURIComponent","Promise","resolve","JSON","parse","get","interceptors","request","use","undefined","response","res","setItem","url","stringify","data","err","reject","colorMapping","getColor","name","Array","from","_","Math","floor","random","reduce","p","i","VisualizeOffences","props","grouped","groupBy","offences","x","Type","Object","entries","map","key","value","length","fill","style","height","width","margin","top","right","left","bottom","strokeDasharray","dataKey","isAnimationActive","label","now","Date","startDateMin","format","sub","years","startDateMax","days","endDateMax","startDate","months","endDate","Home","useState","mapLatLng","setMapLatLng","setLocationType","locationSearch","setSuburbSearch","geographies","setGeographies","setBoundaries","boundaryFeatures","setBoundaryFeatures","startDateISO","setStartDate","endDateISO","setEndDate","setOffences","useEffect","getGeographies","then","find","allFeatures","c","features","centroid","latlngs","first","last","push","p1","p2","f","twicearea","y","nPts","j","lat","lng","getPolygonCentroid","geometry","coordinates","coords","start","parseISO","end","getOffences","onChange","e","target","values","min","max","Map","center","zoom","TileLayer","attribution","Polygon","properties","Name","color","positions","About","rel","href","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","L","Marker","prototype","options","icon","iconRetinaUrl","iconUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","tooltipAnchor","shadowSize","App","exact","path","component","Boolean","window","location","hostname","match","jQuery","$","Popper","require","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ad357e53.chunk.js","sourcesContent":["export enum LocationType {\n  'QPS Division' = 'QPS Division',\n  'SUBURB' = 'SUBURB',\n  'QPS District' = 'QPS District',\n  'QPS Patrol Group' = 'QPS Patrol Group',\n  'Neighbourhood Watch' = 'Neighbourhood Watch',\n  'Local Government Area' = 'Local Government Area',\n  'QPS Region' = 'QPS Region'\n}\n\nexport enum GeographicType {\n  'QPS Division' = 'QPS Division',\n  'Suburb' = 'Suburb',\n  'POSTCODE' = 'POSTCODE',\n  'QPS District' = 'QPS District',\n  'QPS Patrol Group' = 'QPS Patrol Group',\n  'Neighbourhood Watch' = 'Neighbourhood Watch',\n  'Local Government Area' = 'Local Government Area',\n  'QPS Region' = 'QPS Region'\n}\n\nexport enum CrimeType {\n  SUBURB = 'SUBURB',\n  LGA = 'LGA',\n  DIVISION = 'DIVISION',\n  REGION = 'REGION',\n  DISTRICT = 'DISTRICT',\n  NHW = 'NHW',\n  POSTCODE = 'POSTCODE',\n  PATROLGROUP = 'PATROLGROUP'\n}\n\nexport enum OffenceType {\n  'Arson' = 'Arson',\n  'Assault' = 'Assault',\n  'Drug Offences' = 'Drug Offences',\n  'Fraud' = 'Fraud',\n  'Gaming Racing & Betting Offences' = 'Gaming Racing & Betting Offences',\n  'Good Order Offences' = 'Good Order Offences',\n  'Handling Stolen Goods' = 'Handling Stolen Goods',\n  'Homicide (Murder)' = 'Homicide (Murder)',\n  'Liquor (excl. Drunkenness)' = 'Liquor (excl. Drunkenness)',\n  'Miscellaneous Offences' = 'Miscellaneous Offences',\n  'Other Homicide' = 'Other Homicide',\n  'Other Offences Against the Person' = 'Other Offences Against the Person',\n  'Other Property Damage' = 'Other Property Damage',\n  'Other Theft (excl. Unlawful Entry)' = 'Other Theft (excl. Unlawful Entry)',\n  'Prostitution Offences' = 'Prostitution Offences',\n  'Robbery' = 'Robbery',\n  'Stock Related Offences' = 'Stock Related Offences',\n  'Traffic and Related Offences' = 'Traffic and Related Offences',\n  'Trespassing and Vagrancy' = 'Trespassing and Vagrancy',\n  'Unlawful Entry' = 'Unlawful Entry',\n  'Unlawful Use of Motor Vehicle' = 'Unlawful Use of Motor Vehicle',\n  'Weapons Act Offences' = 'Weapons Act Offences'\n}\n","import React, { Component } from 'react'\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <div id=\"not-found\" className=\"container\">\n        <h1>404</h1>\n        <p>Page could not be found</p>\n      </div>\n    )\n  }\n}\n\nexport default NotFound\n","export const brisbaneCoords: [number, number] = [-27.470125, 153.021072]\n","const config = {\n  serverUri: process.env.REACT_APP_SERVER_URI\n}\n\nexport default config\n","import { GeographicType, LocationType } from './enums'\n\nexport function mapGeographicToLocationType(type: GeographicType) {\n  switch (type) {\n    case GeographicType['QPS District']:\n      return LocationType['QPS District']\n    case GeographicType['Local Government Area']:\n      return LocationType['Local Government Area']\n    case GeographicType['Neighbourhood Watch']:\n      return LocationType['Neighbourhood Watch']\n    case GeographicType['QPS Division']:\n      return LocationType['QPS Division']\n    case GeographicType.Suburb:\n      return LocationType.SUBURB\n    case GeographicType['QPS Patrol Group']:\n      return LocationType['QPS Patrol Group']\n    case GeographicType['QPS Region']:\n      return LocationType['QPS Region']\n\n    case GeographicType.POSTCODE:\n      console.error('unsupported mapping: ' + type)\n      return\n  }\n}\n\nexport function mapLocationTypeToValidApiParam(type: LocationType) {\n  switch (type) {\n    case LocationType['Local Government Area']:\n      return 'LGA'\n    case LocationType['Neighbourhood Watch']:\n      return 'NHW'\n    case LocationType['QPS District']:\n      return 'DISTRICT'\n    case LocationType['QPS Division']:\n      return 'DIVISION'\n    case LocationType['QPS Patrol Group']:\n      return 'PATROLGROUP'\n    case LocationType['QPS Region']:\n      return 'REGION'\n    case LocationType.SUBURB:\n      return 'SUBURB'\n    default:\n      throw new Error('unsupported LocationType:' + type)\n  }\n}\n\nexport function getPolygonCentroid(latlngs: [number, number][]) {\n  const first = latlngs[0]\n  const last = latlngs[latlngs.length - 1]\n\n  // close the polygon\n  if (first[0] !== last[0] || first[1] !== last[1]) {\n    latlngs.push(first)\n  }\n\n  let twicearea = 0,\n    x = 0,\n    y = 0,\n    nPts = latlngs.length,\n    p1,\n    p2,\n    f\n\n  for (let i = 0, j = nPts - 1; i < nPts; j = i++) {\n    p1 = latlngs[i]\n    p2 = latlngs[j]\n    f = p1[0] * p2[1] - p2[0] * p1[1]\n    twicearea += f\n    x += (p1[0] + p2[0]) * f\n    y += (p1[1] + p2[1]) * f\n  }\n\n  f = twicearea * 3\n  return { lat: x / f, lng: y / f }\n}\n\nexport function flatten(arr: any[]): any {\n  return arr.reduce(function(flat, toFlatten) {\n    return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten)\n  }, [])\n}\n\nexport function getRandomHexColor() {\n  const letters = '0123456789ABCDEF'\n  return '#' + Array.from(Array(6), _ => letters[Math.floor(Math.random() * 16)]).reduce((p, i) => p + i, '')\n}\n","import { Promise } from 'bluebird'\nimport axios, { AxiosResponse } from 'axios'\nimport config from './config'\nimport { IGeographyLookup, IBoundaryGeography, IOffence } from './types/crime'\nimport { LocationType, CrimeType } from './enums'\nimport { mapLocationTypeToValidApiParam } from './utils'\nimport { format, parseISO } from 'date-fns'\n\nconst server = axios.create({\n  baseURL: config.serverUri\n})\n\nserver.interceptors.request.use(onAxiosBegin, undefined)\nserver.interceptors.response.use(onSuccess, onAxiosError)\n\nfunction onAxiosBegin(config: any) {\n  return config\n}\n\nfunction onAxiosError(err: any) {\n  if (!err.response) {\n    return Promise.reject(err)\n  } else {\n    return Promise.reject(err)\n  }\n}\n\nfunction onSuccess(res: AxiosResponse<any>): any {\n  localStorage.setItem(res.config.url!, JSON.stringify(res.data))\n  return res.data\n}\n\nexport function getGeographies(): Promise<IGeographyLookup[]> {\n  const local = localStorage.getItem(`${server.defaults.baseURL}/dev/lut`)\n  if (local) return Promise.resolve(JSON.parse(local))\n  else return server.get('/dev/lut')\n}\n\nexport function getBoundaries(locationType: LocationType, locationName: string): Promise<IBoundaryGeography[]> {\n  const mappedLocation = mapLocationTypeToValidApiParam(locationType)\n  const local = localStorage.getItem(\n    `${server.defaults.baseURL}/dev/locations?locationType=${mappedLocation}&locationName=${encodeURIComponent(locationName)}`\n  )\n  if (local) return Promise.resolve(JSON.parse(local))\n  else return server.get(`/dev/locations?locationType=${mappedLocation}&locationName=${encodeURIComponent(locationName)}`)\n}\n\nexport function getOffences(type: CrimeType, locationName: string, startDate: string, endDate: string): Promise<IOffence[]> {\n  const start = format(parseISO(startDate), 'MM-dd-yyyy')\n  const end = format(parseISO(endDate), 'MM-dd-yyyy')\n  const local = localStorage.getItem(\n    `${server.defaults.baseURL}/dev/offences?locationType=${type}&startDate=${startDate}&locationName=${locationName}&endDate=${endDate}&format=JSON`\n  )\n  if (local) return Promise.resolve(JSON.parse(local))\n  return server.get(`/dev/offences?locationType=${type}&startDate=${start}&locationName=${locationName}&endDate=${end}&format=JSON`)\n}\n","import React from 'react'\nimport { IOffence } from '../types/crime'\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, PieChart, Pie } from 'recharts'\nimport { groupBy } from 'lodash'\nimport { getRandomHexColor } from '../utils'\n\ninterface IVisualizeOffencesProps {\n  offences: IOffence[]\n}\n\ninterface ColorMap {\n  [key: string]: string\n}\n\nconst colorMapping: ColorMap = {}\n\nfunction getColor(name: string): string {\n  if (!(name in colorMapping)) colorMapping[name] = getRandomHexColor()\n  return colorMapping[name]\n}\n\nconst VisualizeOffences = (props: IVisualizeOffencesProps) => {\n  const grouped = groupBy(props.offences, (x: IOffence) => x.Type)\n  const data = Object.entries(grouped).map(([key, values]) => ({\n    name: key,\n    value: values.length,\n    fill: getColor(key)\n  }))\n  return (\n    <div className=\"\">\n      <p>\n        <strong>Total: </strong>\n        {props.offences.length}\n      </p>\n      <div style={{ height: '200px', width: '100%' }}>\n        <ResponsiveContainer>\n          <BarChart\n            data={data}\n            margin={{\n              top: 5,\n              right: 30,\n              left: 20,\n              bottom: 5\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Bar dataKey=\"value\" fill=\"#660000\" isAnimationActive={false} />\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n      <div style={{ height: '250px', width: '100%' }}>\n        <ResponsiveContainer>\n          <PieChart>\n            <Pie data={data} dataKey={'value'} label={x => x.name} isAnimationActive={false} />\n          </PieChart>\n        </ResponsiveContainer>\n      </div>\n    </div>\n  )\n}\n\nexport default VisualizeOffences\n","import React, { useEffect, useState } from 'react'\nimport { Map, TileLayer, Polygon } from 'react-leaflet'\nimport { brisbaneCoords } from '../constants'\nimport { getGeographies, getBoundaries, getOffences } from '../api'\nimport { IGeographyLookup, IBoundaryGeography, IGeoJsonItem, IOffence } from '../types/crime'\nimport { LocationType, CrimeType } from '../enums'\nimport { getPolygonCentroid, mapGeographicToLocationType } from '../utils'\nimport VisualizeOffences from '../components/VisualizeOffences'\nimport { sub, format } from 'date-fns'\ninterface IHomeProps {}\n\nconst now = new Date()\nconst startDateMin = format(sub(now, { years: 5 }), 'yyyy-MM-dd')\nconst startDateMax = format(sub(now, { days: 1 }), 'yyyy-MM-dd')\nconst endDateMax = format(now, 'yyyy-MM-dd')\nconst defaults = {\n  startDate: format(sub(now, { months: 1 }), 'yyyy-MM-dd'),\n  endDate: format(now, 'yyyy-MM-dd')\n}\n\nconst Home = (props: IHomeProps) => {\n  const [mapLatLng, setMapLatLng] = useState(brisbaneCoords)\n  const [locationType, setLocationType] = useState<LocationType>(LocationType.SUBURB)\n  const [locationSearch, setSuburbSearch] = useState('Toowong')\n  const [geographies, setGeographies] = useState<IGeographyLookup[]>()\n\n  const [, setBoundaries] = useState<IBoundaryGeography[]>()\n  const [boundaryFeatures, setBoundaryFeatures] = useState<IGeoJsonItem[]>()\n\n  const [startDateISO, setStartDate] = useState(defaults.startDate)\n  const [endDateISO, setEndDate] = useState(defaults.endDate)\n\n  //const [userLocation, setUserLocation] = useState([])\n\n  const [offences, setOffences] = useState<IOffence[]>([])\n\n  useEffect(() => {\n    getGeographies().then(res => {\n      setGeographies(res)\n    })\n    //navigator.geolocation.getCurrentPosition(console.log, console.error, { enableHighAccuracy: true })\n  }, [])\n\n  useEffect(() => {\n    if (!locationSearch) {\n      setBoundaryFeatures([])\n      setBoundaries([])\n      return\n    }\n    if (geographies && !geographies.find(x => mapGeographicToLocationType(x.type) === locationType && x.name === locationSearch)) {\n      setBoundaryFeatures([])\n      setBoundaries([])\n      return\n    }\n\n    getBoundaries(locationType, locationSearch).then(res => {\n      setBoundaries(res)\n      const allFeatures = res.reduce<IGeoJsonItem[]>((p, c) => [...p, ...c.features], [])\n      setBoundaryFeatures(allFeatures)\n      // @ts-ignore\n      const centroid = getPolygonCentroid(res[0].features[0].geometry.coordinates[0].map<[number, number]>(coords => [coords[1], coords[0]]))\n      setMapLatLng([centroid.lat, centroid.lng])\n    })\n  }, [locationSearch, geographies, locationType])\n\n  useEffect(() => {\n    if (!locationSearch || !startDateISO || !endDateISO) {\n      return\n    }\n    if (geographies && !geographies.find(x => mapGeographicToLocationType(x.type) === locationType && x.name === locationSearch)) {\n      return\n    }\n    getOffences(CrimeType.SUBURB, locationSearch, startDateISO, endDateISO).then(res => {\n      setOffences(res)\n    })\n  }, [locationSearch, startDateISO, endDateISO, geographies, locationType])\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-5\">\n          <form>\n            <div className=\"form-row\">\n              <div className=\"col-12\">\n                <label>\n                  <strong>Location</strong>\n                </label>\n              </div>\n              <div className=\"col\">\n                <input type=\"text\" className=\"form-control\" value={locationSearch} onChange={e => setSuburbSearch(e.target.value)} />\n              </div>\n              <div className=\"col\">\n                <select\n                  className=\"form-control\"\n                  value={locationType}\n                  onChange={e => setLocationType(LocationType[e.target.value as keyof typeof LocationType])}\n                >\n                  <option value=\"\">Select ...</option>\n                  {Object.values(LocationType).map(x => (\n                    <option key={x} value={x}>\n                      {x}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"col-12\">\n                <label>\n                  <strong>Dates</strong>\n                </label>\n              </div>\n              <div className=\"col\">\n                <input\n                  type=\"date\"\n                  className=\"form-control\"\n                  value={startDateISO}\n                  onChange={e => setStartDate(e.target.value)}\n                  min={startDateMin}\n                  max={startDateMax}\n                />\n              </div>\n              <div className=\"col\">\n                <input type=\"date\" className=\"form-control\" value={endDateISO} onChange={e => setEndDate(e.target.value)} max={endDateMax} />\n              </div>\n            </div>\n          </form>\n\n          <VisualizeOffences offences={offences} />\n        </div>\n        <div className=\"col-7\">\n          <Map center={mapLatLng} zoom={13} style={{ height: '800px', width: '100%' }}>\n            <TileLayer\n              attribution=\"Map tiles by Carto, under CC BY 3.0. Data by OpenStreetMap, under ODbL.\"\n              url=\"https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png\"\n            />\n            {boundaryFeatures &&\n              boundaryFeatures.map(f => {\n                return (\n                  <Polygon\n                    key={f.properties.Name}\n                    color=\"#660000\"\n                    // @ts-ignore\n                    positions={f.geometry.coordinates[0].map<[number, number]>(coords => [coords[1], coords[0]])}\n                  />\n                )\n              })}\n            {/* <Marker position={brisbaneCoords}>\n              <Popup>\n                A pretty CSS3 popup. <br /> Easily customizable.\n              </Popup>\n            </Marker> */}\n          </Map>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","import React from 'react'\n\nconst About = () => {\n  return (\n    <div className=\"container\">\n      <h1>Data</h1>\n      <p>\n        This is purely a visualization of the <strong>data that is generated and held data.qld.gov.au</strong>\n      </p>\n\n      <table className=\"table table-bordered table-dark table-striped\">\n        <thead>\n          <tr>\n            <td>Dataset</td>\n            <td>License</td>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.data.qld.gov.au/dataset/crime-locations-2000-present\">\n                QPS\n              </a>\n            </td>\n            <td>\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://creativecommons.org/licenses/by/3.0/au/\">\n                Creative Commons Attribution 3.0 license\n              </a>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://carto.com/location-data-services/basemaps/\">\n                Map tiles by Carto\n              </a>\n            </td>\n            <td>\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://opendatacommons.org/licenses/odbl/index.html\">\n                under CC BY 3.0. Data by OpenStreetMap, under ODbL.\n              </a>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default About\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarTogglerDemo01\"\n        aria-controls=\"navbarTogglerDemo01\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          qld\n        </Link>\n        <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n          <li className=\"nav-item active\">\n            <Link className=\"nav-link\" to=\"/\">\n              Home<span className=\"sr-only\">(current)</span>\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/about\">\n              About\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  )\n}\n\nexport default Navbar\n","import React from 'react'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport NotFound from './pages/NotFound'\nimport Home from './pages/Home'\nimport About from './pages/About'\nimport Navbar from './components/Navbar'\nimport L from 'leaflet'\n// BUG https://github.com/Leaflet/Leaflet/issues/4968\nimport iconRetinaUrl from 'leaflet/dist/images/marker-icon-2x.png'\nimport iconUrl from 'leaflet/dist/images/marker-icon.png'\nimport shadowUrl from 'leaflet/dist/images/marker-shadow.png'\nL.Marker.prototype.options.icon = L.icon({\n  iconRetinaUrl,\n  iconUrl,\n  shadowUrl,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  tooltipAnchor: [16, -28],\n  shadowSize: [41, 41]\n})\n\nconst App = () => {\n  return (\n    <Router>\n      <div id=\"application\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/about\" component={About} />\n\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\n// import config from './config'\nimport $ from 'jquery'\nimport Popper from 'popper.js'\nimport '@fortawesome/fontawesome-free/css/fontawesome.css'\nimport '@fortawesome/fontawesome-free/css/regular.css'\nimport '@fortawesome/fontawesome-free/css/solid.css'\nimport 'leaflet/dist/leaflet.css'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './css/base.scss'\n\n/*\n----------------------------------------------------------------------\n  Shim to provide dependent plugins without ejecting create-react-app\n*/\n// @ts-ignore\nwindow.jQuery = $\n// @ts-ignore\nwindow.$ = $\n// @ts-ignore\nwindow.Popper = Popper\nrequire('bootstrap')\n/* ------------------------------------------------------------------- */\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}